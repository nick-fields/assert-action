name: CI/CD
on:
  push:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # positive tests to verify assertions work as expected
      - name: Setup Test Data
        id: test-data
        run: echo "::set-output name=value::testing"
      - name: Assert expected
        uses: ./
        with:
          expected: testing
          actual: ${{ steps.test-data.outputs.value }}
      - name: Assert startsWith
        uses: ./
        with:
          expected: test
          actual: ${{ steps.test-data.outputs.value }}
          comparison: startsWith
      - name: Assert endsWith
        uses: ./
        with:
          expected: ing
          actual: ${{ steps.test-data.outputs.value }}
          comparison: endsWith
      - name: Assert contains
        uses: ./
        with:
          expected: est
          actual: ${{ steps.test-data.outputs.value }}
          comparison: contains
      - name: Assert notEqual
        uses: ./
        with:
          expected: 123
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notEqual
      - name: Assert notStartsWith
        uses: ./
        with:
          expected: est
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notStartsWith
      - name: Assert notEndsWith
        uses: ./
        with:
          expected: test
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notEndsWith
      - name: Assert notContains
        uses: ./
        with:
          expected: 123
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notContains
      # negative tests to verify when assertion fails error is thrown
      - name: Assert expected (fails)
        uses: ./
        id: expected-fail
        continue-on-error: true
        with:
          expected: not-testing
          actual: ${{ steps.test-data.outputs.value }}
      - name: Assert startsWith fails
        uses: ./
        id: startswith-fail
        continue-on-error: true
        with:
          expected: not
          actual: ${{ steps.test-data.outputs.value }}
          comparison: startsWith
      - name: Assert endsWith
        id: endswith-fail
        uses: ./
        continue-on-error: true
        with:
          expected: not
          actual: ${{ steps.test-data.outputs.value }}
          comparison: endsWith
      - name: Assert contains
        id: contains-fail
        uses: ./
        continue-on-error: true
        with:
          expected: not
          actual: ${{ steps.test-data.outputs.value }}
          comparison: contains
      - name: Assert notEqual
        id: notequal-fail
        uses: ./
        continue-on-error: true
        with:
          expected: testing
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notEqual
      - name: Assert notContains
        id: notcontains-fail
        uses: ./
        continue-on-error: true
        with:
          expected: est
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notContains
      - name: Assert notStartsWith
        id: notstartswith-fail
        uses: ./
        continue-on-error: true
        with:
          expected: tes
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notStartsWith
      - name: Assert notEndsWith
        id: notendswith-fail
        uses: ./
        continue-on-error: true
        with:
          expected: ing
          actual: ${{ steps.test-data.outputs.value }}
          comparison: notEndsWith
      # verify all expected failures threw error
      - name: Verify expected statuses from previous tests
        uses: ./
        with:
          expected: ${{ steps.expected-fail.outcome == 'failure' && steps.startswith-fail.outcome == 'failure' && steps.endswith-fail.outcome == 'failure' && steps.contains-fail.outcome == 'failure' && steps.notequal-fail.outcome == 'failure' && steps.notcontains-fail.outcome == 'failure' && steps.notstartswith-fail.outcome == 'failure' && steps.notendswith-fail.outcome == 'failure' }}
          actual: true

  # runs on push to main only
  cd:
    name: Publish Action
    needs: tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag
        run: git tag -f v${MAJOR_VERSION} && git push -f origin v${MAJOR_VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAJOR_VERSION: ${{ steps.semantic.outputs.new_release_major_version }}
